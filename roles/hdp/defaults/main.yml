hdp:
  name: HDP-2.6.4
  version: 2.6
  subversion: 2.6.4.0-91
  yumtag: "2_6_4_0_9a1"
  url: http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.4.0
  utils:
    version: 1.1.0.22
    url: http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.22/repos/centos7
  packages:
    - hdp-select
    - zookeeper-server
    - hadoop-hdfs-datanode
    - hadoop-hdfs-namenode
    - hadoop-hdfs-secondarynamenode
    - hadoop-yarn-nodemanager 
    - hadoop-yarn-resourcemanager
    - hadoop-yarn-timelineserver
    - hadoop-mapreduce
    - hadoop-mapreduce-historyserver
    - hbase
    - hive-server
    - hive-webhcat
    - ranger-admin
  cluster:
    id: sandbox
    pass: admin
    realm: HOSTONLY.COM
    cfgtag: version8
    krbpass: nimda

# Using Ambari REST API to provision the cluster
# See https://github.com/apache/ambari/tree/trunk/ambari-server/docs/api/v1
# and https://community.hortonworks.com/articles/47170/automate-hdp-installation-using-ambari-blueprints.html
# JSON payloads are built from those Ansible dictionnaries 
api:
  create_version:
     VersionDefinition:
       version_url: "file:/opt/HDP.xml"
  create_blueprint:
    Blueprints:
      blueprint_name: ansible
      stack_name: HDP
      stack_version: "{{ hdp.version }}"
    host_groups:
      - name: hostgroup1
        cardinality: 1
        components:
          - name: ZOOKEEPER_SERVER
          - name: NAMENODE
          - name: SECONDARY_NAMENODE
          - name: DATANODE
          - name: RESOURCEMANAGER
          - name: NODEMANAGER
          - name: HISTORYSERVER
          - name: APP_TIMELINE_SERVER
  create_cluster:
    blueprint: ansible
    default_password: "{{ hdp.cluster.pass }}"
    host_groups :
      - name: hostgroup1
        hosts:
          -  fqdn: "{{ inventory_hostname }}" 
  add_kdcadmin:
    Credential:
      principal : admin/admin
      key:  "{{ hdp.cluster.krbpass }}"
      type: persisted
  enable_kerberos:
    session_attributes:
      kerberos_admin:
        principal: admin/admin
        password: "{{ hdp.cluster.krbpass }}"
    Clusters:
      security_type: KERBEROS

