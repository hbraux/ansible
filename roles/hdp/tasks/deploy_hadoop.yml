# deploy Hadoop Core (HDFS+YARN)
#
# Using Ambari REST API to provision the cluster
# See https://github.com/apache/ambari/tree/trunk/ambari-server/docs/api/v1
# and https://community.hortonworks.com/articles/47170/automate-hdp-installation-using-ambari-blueprints.html
# JSON payloads are built from those Ansible dictionnaries 

- name: prepare API payload
  set_fact:
    api_create_blueprint:
      Blueprints:
        blueprint_name: ansible
        stack_name: HDP
        stack_version: "{{ hdp.version }}"
      host_groups:
        - name: hostgroup1
          cardinality: 1
          components:
            - name: ZOOKEEPER_SERVER
            - name: NAMENODE
            - name: SECONDARY_NAMENODE
            - name: DATANODE
            - name: RESOURCEMANAGER
            - name: NODEMANAGER
            - name: HISTORYSERVER
            - name: APP_TIMELINE_SERVER

- name: create blueprint API
  uri:
    url: http://localhost:8080/api/v1/blueprints/singlenode?validate_topology=false
    method: POST
    user: admin
    password: "{{ hdp.cluster.pass }}"
    body: "{{ api_create_blueprint | to_json }}"
    status_code: 201
    force_basic_auth: yes
    body_format: raw
    headers:
      X-Requested-By: "ambari"

- name: prepare API payload
  set_fact:
    api_create_cluster:
      blueprint: ansible
      default_password: "{{ hdp.cluster.password }}"
      host_groups :
        - name: hostgroup1
          hosts:
            -  fqdn: "{{ inventory_hostname }}" 

- name: submit creation request for cluster {{ hdp.cluster.name }}
  uri:
    url: http://localhost:8080/api/v1/clusters/{{ hdp.cluster.name }}
    method: POST
    user: admin
    password: "{{ hdp.cluster.pass }}"
    body: "{{ api_create_cluster |to_json  }}"
    status_code: 202
    force_basic_auth: yes
    body_format: raw
    headers:
      X-Requested-By: "ambari"

- name: wait for HDFS services to start
  wait_for:
    port: 8020
    host: "{{ inventory_hostname }}"
    timeout: 600

- name: wait for YARN services to start
  wait_for:
    port: 8088
    host: "{{ inventory_hostname }}"
    timeout: 600

- name: wait for MapReduce History Server to start
  wait_for:
    port: 19888
    host: "{{ inventory_hostname }}"
    timeout: 120

