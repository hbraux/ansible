# Enable Kerberos
# Seee https://cwiki.apache.org/confluence/display/AMBARI/Automated+Kerberizaton

- name: get default Kerberos Descriptor
  uri:
    url: http://localhost:8080/api/v1/stacks/HDP/versions/{{ hdp.version }}/artifacts/kerberos_descriptor
    method: GET
    user: admin
    password: "{{ hdp.cluster.pass }}"
    status_code: 200
    force_basic_auth: yes
    return_content: yes
    headers:
      X-Requested-By: "ambari"
  register: request_krb

- name: copy Kerberos Descriptor to file
  copy:
    content: "{{ request_krb.content  }}"
    dest: /opt/krbdesc.json
  become: true

- name: remove unwanted properties from Descriptor
  shell: |
     echo >> /opt/krbdesc.json
     sed 's/, "href": "[^"]*"//;s/"stack_name": "HDP",//;s/, "stack_version": "[^"]*"//' /opt/krbdesc.json
  register: file_ds
  become: true


- name: add Kerberos service to cluster {{ hdp.cluster.id }}
  uri:
    url: http://localhost:8080/api/v1/clusters/{{ hdp.cluster.id }}/services/KERBEROS
    method: POST
    user: admin
    password: "{{ hdp.cluster.pass }}"
    status_code: 201
    force_basic_auth: yes
    headers:
      X-Requested-By: "ambari"

- name: add Kerberos client component to Kerberos service
  uri:
    url: http://localhost:8080/api/v1/clusters/{{ hdp.cluster.id }}/services/KERBEROS/components/KERBEROS_CLIENT
    method: POST
    user: admin
    password: "{{ hdp.cluster.pass }}"
    status_code: 201
    force_basic_auth: yes
    headers:
      X-Requested-By: "ambari"

- name: load krb5.conf to ansible
  shell: warn=no sed ':a;N;$!ba;s/\n/\\n/g' /etc/krb5.conf
  register: file_krb5

- name: prepare Kerberos configuration
  template:
    src: kerberos.j2
    dest: /opt/kerberos.json
  become: true

- name: load Kerberos configuration to ansible
  command: cat /opt/kerberos.json 
  register: file_kc

- name: set Kerberos configuration on cluster {{ hdp.cluster.id }}
  uri:
    url: http://localhost:8080/api/v1/clusters/{{ hdp.cluster.id }}
    method: PUT
    user: admin
    password: "{{ hdp.cluster.pass }}"
    body: "{{ file_kc.stdout | to_json }}"
    status_code: 200
    force_basic_auth: yes
    body_format: json
    headers:
      X-Requested-By: "ambari"

# this step is not needed
- name: create the Kerberos client on {{ inventory_hostname }}
  uri:
    url: http://localhost:8080/api/v1/clusters/{{ hdp.cluster.id }}/hosts?Hosts/host_name={{ inventory_hostname }}
    method: POST
    user: admin
    password: "{{ hdp.cluster.pass }}"
    body: '{"host_components":[{"HostRoles":{"component_name":"KERBEROS_CLIENT"}}]}'
    status_code: 201
    force_basic_auth: yes
    body_format: raw
    headers:
      X-Requested-By: "ambari"
  when: false

- name:  adding KDC administrator credential
  uri:
    url: http://localhost:8080/api/v1/clusters/{{ hdp.cluster.id }}/credentials/kdc.admin.credential
    method: POST
    user: admin
    password: "{{ hdp.cluster.pass }}"
    body: "{{ api.add_kdcadmin | to_json  }}"
    status_code: 201
    force_basic_auth: yes
    body_format: raw
    headers:
      X-Requested-By: "ambari"
 

- name: Install the Kerberos service
  uri:
    url: http://localhost:8080/api/v1/clusters/{{ hdp.cluster.id }}/services/KERBEROS
    method: PUT
    user: admin
    password: "{{ hdp.cluster.pass }}"
    body: '{"ServiceInfo":{"state":"INSTALLED"}}' 
    status_code: 200
    force_basic_auth: yes
    body_format: raw
    headers:
      X-Requested-By: "ambari"

# NOT NEEDED??
- name: stop all services
  uri:
    url: http://localhost:8080/api/v1/clusters/{{ hdp.cluster.id }}/services
    method: PUT
    user: admin
    password: "{{ hdp.cluster.pass }}"
    body:  '{"RequestInfo":{"context":"Stop Service"},"Body":{"ServiceInfo":{"state":"INSTALLED"}}}'
    status_code: 202
    force_basic_auth: yes
    body_format: raw
    headers:
      X-Requested-By: "ambari"
  when: false

- name: set the Kerberos Descriptor 
  uri:
    url: http://localhost:8080/api/v1/clusters/{{ hdp.cluster.id }}/artifacts/kerberos_descriptor
    method: POST
    user: admin
    password: "{{ hdp.cluster.pass }}"
    body:  "{{ file_ds.stdout | to_json }}"
    status_code: 201
    force_basic_auth: yes
    body_format: json
    headers:
      X-Requested-By: "ambari"
  
- name: enable Kerberos on cluster {{ hdp.cluster.id }}
  uri:
    url: http://localhost:8080/api/v1/clusters/{{ hdp.cluster.id }}
    method: PUT
    user: admin
    password: "{{ hdp.cluster.pass }}"
    body:  "{{ api.enable_kerberos | to_json  }}"
    status_code: 202
    force_basic_auth: yes
    body_format: raw
    headers:
      X-Requested-By: "ambari"

- name: start all services
  uri:
    url: http://localhost:8080/api/v1/clusters/{{ hdp.cluster.id }}/services
    method: PUT
    user: admin
    password: "{{ hdp.cluster.pass }}"
    body: '{"ServiceInfo": {"state" : "STARTED"}}'
    status_code: 202
    force_basic_auth: yes
    body_format: raw
    headers:
      X-Requested-By: "ambari"
  when: false

